name: CI

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  # Make sure commit messages follow the conventional commits convention:
  # https://www.conventionalcommits.org
  commitlint:
    name: Lint Commit Messages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v5.4.5
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - uses: pre-commit/action@v3.0.0

  test:
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.11"
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: snok/install-poetry@v1.4.1
      - name: Install Dependencies
        run: poetry install
        shell: bash
      - name: Test with Pytest
        run: poetry run pytest
        shell: bash
  release:
    runs-on: ubuntu-latest
    needs:
      - test
    concurrency: release
    # if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
      actions: write
      packages: write
    environment:
      name: release
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Check out the target branch
        run: git checkout Lash-L-patch-19
      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
      - name: Python Semantic Release
        uses: python-semantic-release/python-semantic-release@v9.14.0
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          push: false
      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh
      - name: Authenticate GitHub CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          gh auth status
      - name: Create Merge Request
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          gh pr create \
            --base main \
            --head "$RELEASE_BRANCH" \
            --title "Release $(python-semantic-release version)" \
            --body "This PR contains the release changes for version $(python-semantic-release version --noop)."
      # - name: Publish package distributions to PyPI
      #   uses: pypa/gh-action-pypi-publish@v1.12.2
      #   if: steps.release.outputs.released == 'true'
      # - name: Publish package distributions to GitHub Releases
      #   uses: python-semantic-release/upload-to-gh-release@v8.7.0
      #   if: steps.release.outputs.released == 'true'
